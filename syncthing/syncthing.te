policy_module(syncthing, 1.3.0)

########################################
#
# Declarations
#
require {
    type httpd_var_lib_t;
}

attribute_role syncthing_roles;
role syncthing_roles types syncthing_t;

type syncthing_t;
type syncthing_exec_t;
init_daemon_domain(syncthing_t, syncthing_exec_t)
userdom_user_application_domain(syncthing_t, syncthing_exec_t)

type syncthing_content_t;
files_type(syncthing_content_t)

type syncthing_content_rw_t;
files_type(syncthing_content_rw_t)

type syncthing_xdg_config_t;
files_type(syncthing_xdg_config_t)

# Port 8096 by default.
type syncthing_port_t;
corenet_port(syncthing_port_t)

type syncthing_server_packet_t;
corenet_server_packet(syncthing_server_packet_t)

########################################
#
# Declarations
#

allow syncthing_t self:process { signal_perms setpgid setsched getsched };
allow syncthing_t self:fifo_file rw_fifo_file_perms;
allow syncthing_t self:tcp_socket { listen accept };

can_exec(syncthing_t, syncthing_exec_t)
corecmd_exec_bin(syncthing_t)

manage_dirs_pattern(syncthing_t, syncthing_xdg_config_t, syncthing_xdg_config_t)
manage_files_pattern(syncthing_t, syncthing_xdg_config_t, syncthing_xdg_config_t)
manage_lnk_files_pattern(syncthing_t, syncthing_xdg_config_t, syncthing_xdg_config_t)

kernel_read_kernel_sysctls(syncthing_t)
kernel_read_net_sysctls(syncthing_t)
kernel_read_system_state(syncthing_t)
kernel_read_network_state(syncthing_t)

syncthing_tcp_bind_syncthing_port(syncthing_t)
syncthing_tcp_connect_syncthing_port(syncthing_t)
syncthing_sendrecv_syncthing_server_packets(syncthing_t)
syncthing_udp_bind_syncthing_port(syncthing_t)
corenet_tcp_bind_all_nodes(syncthing_t)
corenet_udp_bind_all_nodes(syncthing_t)
corenet_tcp_connect_generic_port(syncthing_t)
corenet_tcp_sendrecv_generic_port(syncthing_t)
corenet_tcp_connect_http_cache_port(syncthing_t)
corenet_tcp_sendrecv_http_cache_port(syncthing_t)
corenet_tcp_connect_http_port(syncthing_t)
corenet_tcp_sendrecv_http_port(syncthing_t)
corenet_tcp_connect_pop_port(syncthing_t)
corenet_tcp_sendrecv_pop_port(syncthing_t)
corenet_tcp_connect_soundd_port(syncthing_t)
corenet_tcp_sendrecv_soundd_port(syncthing_t)

dev_read_rand(syncthing_t)
dev_read_urand(syncthing_t)

fs_getattr_xattr_fs(syncthing_t)

auth_use_nsswitch(syncthing_t)

miscfiles_read_generic_certs(syncthing_t)
miscfiles_read_localization(syncthing_t)

# Create a pair customizable type for labeling content
# allowed to be shared by sync. A read only type, and a managable type.
list_dirs_pattern(syncthing_t, syncthing_content_t, syncthing_content_t)
read_files_pattern(syncthing_t, syncthing_content_t, syncthing_content_t)
manage_dirs_pattern(syncthing_t, syncthing_content_rw_t, syncthing_content_rw_t)
manage_files_pattern(syncthing_t, syncthing_content_rw_t, syncthing_content_rw_t)

seutil_read_module_store(syncthing_t)

userdom_use_user_terminals(syncthing_t)
userdom_read_user_home_content_files(syncthing_t)
userdom_manage_user_home_content(syncthing_t)
userdom_read_inherited_user_home_content_files(syncthing_t)

# Networking
allow syncthing_t self:tcp_socket { create_stream_socket_perms server_stream_socket_perms };
allow syncthing_t self:udp_socket create_socket_perms;
allow syncthing_t self:netlink_route_socket create_netlink_socket_perms;

# Custom
apache_list_sys_content(syncthing_t)
apache_read_sys_content_rw_dirs(syncthing_t)
getattr_files_pattern(syncthing_t, httpd_var_lib_t, httpd_var_lib_t);
